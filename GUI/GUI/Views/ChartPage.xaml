<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:behaviors="clr-namespace:GUI.Behaviors"
             xmlns:system="clr-namespace:System;assembly=netstandard"
             mc:Ignorable="d"
             x:Name="chartPage"
             x:Class="GUI.Views.ChartPage">
    <ContentPage.Resources>
        <ResourceDictionary>
            <system:Boolean x:Key="False">False</system:Boolean>
            <system:Boolean x:Key="True">True</system:Boolean>
            
            <behaviors:BoolToLabelConverter x:Key="boolToNotEmptyStyle" 
                                            x:TypeArguments="Style">
                <behaviors:BoolToLabelConverter.FalseLabel>
                    <Style TargetType="Label">
                        <Setter Property="Text" Value="Pole nie może być puste!" />
                        <Setter Property="IsVisible" Value="True"/>
                    </Style>
                </behaviors:BoolToLabelConverter.FalseLabel>
                <behaviors:BoolToLabelConverter.TrueLabel>
                    <Style TargetType="Label">
                        <Setter Property="IsVisible" Value="False"/>
                    </Style>
                </behaviors:BoolToLabelConverter.TrueLabel>
            </behaviors:BoolToLabelConverter>
            
            <behaviors:BoolToLabelConverter x:Key="boolToInvalidInputStyle" 
                                            x:TypeArguments="Style">
                <behaviors:BoolToLabelConverter.FalseLabel>
                    <Style TargetType="Label">
                        <Setter Property="Text" Value="Pole nie jest poprawne!" />
                        <Setter Property="IsVisible" Value="True"/>
                    </Style>
                </behaviors:BoolToLabelConverter.FalseLabel>
                <behaviors:BoolToLabelConverter.TrueLabel>
                    <Style TargetType="Label">
                        <Setter Property="IsVisible" Value="False"/>
                    </Style>
                </behaviors:BoolToLabelConverter.TrueLabel>
            </behaviors:BoolToLabelConverter>
        </ResourceDictionary>
    </ContentPage.Resources>
    
    <ContentPage.Content>
        <StackLayout>
            <StackLayout VerticalOptions="StartAndExpand">
                <ScrollView>
                    <Grid Margin="10, 10, 10, 0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <CollectionView x:Name="pizzasList" 
                            ItemsSource="{Binding Pizzas}" 
                            VerticalScrollBarVisibility="Never" HeightRequest="160">
                            
                            <CollectionView.ItemsLayout>
                                <GridItemsLayout Orientation="Vertical" Span="1"/>
                            </CollectionView.ItemsLayout>

                            <CollectionView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="2*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Label Text="{Binding Amount}" d:Text="1" TextColor="Black"
                                               FontSize="14" FontAttributes="Bold"
                                               />
                                        <Label Text="{Binding Pizza.Name}" d:Text="Pizza"
                                               FontSize="16" FontAttributes="Bold"
                                               TextColor="Black" Grid.Column="1"
                                               Margin="10,0,0,0"/>
                                        <Label Text="{Binding TotalCost, StringFormat='{0} PLN'}" d:Text="26,00 zl"
                                               FontSize="16" Grid.Column="2"
                                               HorizontalOptions="End" Margin="0,0,10,0"/>
                                        <Label Text="{Binding Pizza.Description}" d:Text="Description"
                                               FontSize="12" TextColor="Black" Grid.Column="1"
                                               Grid.Row="1"/>
                                        <Label Text="{Binding Size}" d:Text="Średnia 32cm"
                                               FontSize="12" TextColor="Black"
                                               Grid.Row="2" Grid.Column="1"
                                               Margin="0,0,0,5"/>
                                        <ImageButton Source="minus.png" HorizontalOptions="EndAndExpand"
                                                     Margin="0,0,50,0" WidthRequest="25"
                                                     HeightRequest="25" CornerRadius="5"
                                                     Grid.Column="2" Grid.Row="1" MinimumWidthRequest="25"
                                                     Command="{Binding BindingContext.MinusAmmountCommand, Source={x:Reference Name=chartPage}, Mode=TwoWay}"
                                                     CommandParameter="{Binding .}"/>
                                        <ImageButton Source="add.png" HorizontalOptions="EndAndExpand"
                                                     Margin="10,0,10,0" WidthRequest="25"
                                                     HeightRequest="25" CornerRadius="5"
                                                     Grid.Column="2" Grid.Row="1" MinimumWidthRequest="25"
                                                     Command="{Binding BindingContext.PlusAmmountCommand, Source={x:Reference Name=chartPage}, Mode=TwoWay}"
                                                     CommandParameter="{Binding .}"/>
                                    </Grid>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <StackLayout>
                                <Label Text="Podaj adres zamówienia: " FontSize="14" 
                                   TextColor="Black" FontAttributes="Bold" />
                                <StackLayout>
                                    <Entry Text="{Binding user.Address.Street}" Placeholder="Ulica" TextColor="Black" FontSize="12"
                                       ClearButtonVisibility="WhileEditing">
                                    </Entry>
                                </StackLayout>
                                <StackLayout>
                                    <Entry Text="{Binding user.Address.HouseNumber}" Placeholder="Numer Domu" TextColor="Black" FontSize="12"
                                       ClearButtonVisibility="WhileEditing">
                                        <Entry.Behaviors>
                                            <behaviors:NotEmptyBehavior x:Name="houseNumberValidator"/>
                                        </Entry.Behaviors>
                                    </Entry>
                                    <Label x:Name="houseNumberErrorLabel" FontSize="9" Margin="10,-5,0,0"
                                           TextColor="Red" Style="{Binding Source={x:Reference houseNumberValidator}, 
                                           Path=IsValid, Converter={StaticResource boolToNotEmptyStyle}}"
                                           />
                                </StackLayout>

                                <Entry Text="{Binding user.Address.LocalNumber}" Placeholder="Numer mieszkania (opcjonalne)" TextColor="Black" FontSize="12"
                                       ClearButtonVisibility="WhileEditing"/>
                                <StackLayout>
                                    <Entry Text="{Binding user.Address.City}" Placeholder="Miasto" TextColor="Black" FontSize="12"
                                       ClearButtonVisibility="WhileEditing">
                                        <Entry.Behaviors>
                                            <behaviors:NotEmptyBehavior x:Name="cityValidator"/>
                                        </Entry.Behaviors>
                                    </Entry>
                                    <Label x:Name="cityErrorLabel" FontSize="9" Margin="10,-5,0,0"
                                           TextColor="Red" Style="{Binding Source={x:Reference cityValidator}, 
                                           Path=IsValid, Converter={StaticResource boolToNotEmptyStyle}}"
                                           />
                                </StackLayout>
                                <StackLayout>
                                    <Entry Text="{Binding user.Address.PostCode}" Placeholder="Kod Pocztowy" TextColor="Black" FontSize="12"
                                       ClearButtonVisibility="WhileEditing" MaxLength="6">
                                        <Entry.Behaviors>
                                            <behaviors:PostCodeBehavior x:Name="postCodeValidator"/>
                                        </Entry.Behaviors>
                                    </Entry>
                                    <Label x:Name="postCodeErrorLabel" FontSize="9" Margin="10,-5,0,0"
                                           TextColor="Red" Style="{Binding Source={x:Reference postCodeValidator}, 
                                           Path=IsValid, Converter={StaticResource boolToInvalidInputStyle}}"
                                           />
                                </StackLayout>

                            </StackLayout>
                            <StackLayout Grid.Row="1">
                                <Label Text="Podaj kto odbierze zamówienie: " FontSize="14"
                                   TextColor="Black" FontAttributes="Bold"/>
                                <StackLayout>
                                    <Entry Text="{Binding user.FirstName}" Placeholder="Imię" TextColor="Black" FontSize="12"
                                       ClearButtonVisibility="WhileEditing">
                                        <Entry.Behaviors>
                                            <behaviors:NotEmptyBehavior x:Name="firstNameValidator"/>
                                        </Entry.Behaviors>
                                    </Entry>
                                    <Label x:Name="firstNameErrorLabel" FontSize="9" Margin="10,-5,0,0"
                                           TextColor="Red" Style="{Binding Source={x:Reference firstNameValidator}, 
                                           Path=IsValid, Converter={StaticResource boolToNotEmptyStyle}}"
                                           />
                                </StackLayout>
                                <StackLayout>
                                    <Entry Text="{Binding user.LastName, Mode=TwoWay}" Placeholder="Nazwisko" TextColor="Black" FontSize="12"
                                       ClearButtonVisibility="WhileEditing">
                                        <Entry.Behaviors>
                                            <behaviors:NotEmptyBehavior x:Name="lastNameValidator"/>
                                        </Entry.Behaviors>
                                    </Entry>
                                    <Label x:Name="lastNameErrorLabel" FontSize="9" Margin="10,-5,0,0"
                                           TextColor="Red" Style="{Binding Source={x:Reference lastNameValidator}, 
                                           Path=IsValid, Converter={StaticResource boolToNotEmptyStyle}}"
                                           />
                                </StackLayout>
                                <StackLayout>
                                    <Entry Text="{Binding user.PhoneNumber}" Placeholder="Numer telefonu" TextColor="Black" FontSize="12"
                                       ClearButtonVisibility="WhileEditing" MaxLength="9">
                                        <Entry.Behaviors>
                                            <behaviors:PhoneNumberBehavior x:Name="phoneNumberValidator"/>
                                        </Entry.Behaviors>
                                    </Entry>
                                    <Label x:Name="phoneNumberErrorLabel" FontSize="9" Margin="10,-5,0,0"
                                           TextColor="Red" Style="{Binding Source={x:Reference phoneNumberValidator}, 
                                           Path=IsValid, Converter={StaticResource boolToInvalidInputStyle}}"
                                           />
                                </StackLayout>
                                <StackLayout>
                                    <Entry Text="{Binding user.EmailAddress}" Placeholder="Adres email" TextColor="Black" FontSize="12"
                                       ClearButtonVisibility="WhileEditing">
                                        <Entry.Behaviors>
                                            <behaviors:EmailAddressBehavior x:Name="emailAddressValidator"/>
                                        </Entry.Behaviors>
                                    </Entry>
                                    <Label x:Name="emailAddressErrorLabel" FontSize="9" Margin="10,-5,0,0"
                                           TextColor="Red" Style="{Binding Source={x:Reference emailAddressValidator}, 
                                           Path=IsValid, Converter={StaticResource boolToInvalidInputStyle}}"
                                           />
                                </StackLayout>

                            </StackLayout>
                        </Grid>
                    </Grid>
                </ScrollView>
            </StackLayout>
            <StackLayout VerticalOptions="End" HeightRequest="50">
                <Button BackgroundColor="#9b89ad" 
                        Text="{Binding Price, StringFormat='Zamawiam ({0} PLN)'}" 
                        d:Text="Zamawiam (30,00 PLN)" 
                       TextColor="Black" FontSize="18" FontAttributes="Bold"
                        Command="{Binding OrderCommand}"
                        CommandParameter="{StaticResource False}">
                    <Button.Triggers>
                        <MultiTrigger TargetType="Button">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding IsValid, Source={x:Reference houseNumberValidator} }"
                                                  Value="True"/>
                                <BindingCondition Binding="{Binding IsValid, Source={x:Reference cityValidator} }"
                                                  Value="True"/>
                                <BindingCondition Binding="{Binding IsValid, Source={x:Reference postCodeValidator} }"
                                                  Value="True"/>
                                <BindingCondition Binding="{Binding IsValid, Source={x:Reference firstNameValidator} }"
                                                  Value="True"/>
                                <BindingCondition Binding="{Binding IsValid, Source={x:Reference lastNameValidator} }"
                                                  Value="True"/>
                                <BindingCondition Binding="{Binding IsValid, Source={x:Reference phoneNumberValidator} }"
                                                  Value="True"/>
                                <BindingCondition Binding="{Binding IsValid, Source={x:Reference emailAddressValidator} }"
                                                  Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="CommandParameter" Value="{StaticResource True}"/>
                            <Setter Property="BackgroundColor" Value="#2cc9c2"/>
                        </MultiTrigger> 
                    </Button.Triggers>
                </Button>
            </StackLayout>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>